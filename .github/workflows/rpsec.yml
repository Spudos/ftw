name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ftw-test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.2'

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Create database
        run: |
          cp config/database.yml.github-actions config/database.yml
          RAILS_ENV=test rails db:create

      - name: Create match logging directory
        run: mkdir -p match_logging

      - name: Run RSpec tests
        run: |
          RAILS_ENV=test bundle exec rspec

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Execute SSH command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RACKNERD_HOST }}
          username: ${{ secrets.RACKNERD_USERNAME }}
          port: ${{ secrets.RACKNERD_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Logging into RackNerd server..."
            cd ftw
            docker compose down
            git fetch
            git reset --hard origin/main
            docker compose up -d
